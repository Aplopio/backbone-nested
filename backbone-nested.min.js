/**
 * Backbone Nested Models
 * Author: Bret Little
 * Version: 0.2
 *
 * Nested model support in Backbone.js
 *
 **/
(function(f){var e=f.Model.prototype.set,c=f.Collection.prototype.add,d=f.Model,b=f.Collection,a;f.Model.prototype.setRelation=function(g,k){var i=this.attributes[g],h,l=[],j=[];if(_.has(this.relations,g)){if(i&&i instanceof b){if(k instanceof b||k instanceof Array){k=k.models||k;l=_.clone(k);i.each(function(m,n){var o=_.find(k,function(p){return p.id===m.id});if(o){m.set(o.toJSON?o.toJSON():o);l.splice(n,1)}else{j.push(m)}});_.each(j,function(m){i.remove(m)});i.add(l)}else{i.each(function(m){if(k.id===m.id){m.set(k)}else{i.remove(m)}})}return i}if(i&&i instanceof d){i.set(k);return i}k=new this.relations[g](k);k.parent=this}return k};f.Model.prototype.set=function(n,m,p){var o,k,i;if(_.isObject(n)||n==null){o=n;p=m}else{o={};o[n]=m}p||(p={});if(!o){return this}if(o instanceof d){o=o.attributes}if(p.unset){for(k in o){o[k]=void 0}}if(!this._validate(o,p)){return false}if(this.idAttribute in o){this.id=o[this.idAttribute]}var l=p.changes={};var h=this.attributes;var g=this._escapedAttributes;var j=this._previousAttributes||{};for(k in o){i=o[k];i=this.setRelation(k,i);if(!_.isEqual(h[k],i)||(p.unset&&_.has(h,k))){delete g[k];(p.silent?this._silent:l)[k]=true}p.unset?delete h[k]:h[k]=i;if(!_.isEqual(j[k],i)||(_.has(h,k)!=_.has(j,k))){this.changed[k]=i;if(!p.silent){this._pending[k]=true}}else{delete this.changed[k];delete this._pending[k]}}if(!p.silent){this.change(p)}return this}})(Backbone);